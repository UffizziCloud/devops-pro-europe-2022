name: update uffizzi preview environment

on:
  pull_request:
    types: [synchronize]

jobs:
  build-vote:
    name: Build and Push `vote`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: uffizzi/devops-pro-europe-2022-vote
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./vote

  build-worker:
    name: Build and Push `worker`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: uffizzi/devops-pro-europe-2022-worker
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./worker

  build-result:
    name: Build and Push `result`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: uffizzi/devops-pro-europe-2022-result
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./result

  build-loadbalancer:
    name: Build and Push `loadbalancer`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: uffizzi/devops-pro-europe-2022-loadbalancer
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./loadbalancer

  update-preview:
    name: Update Uffizzi Preview
    runs-on: ubuntu-latest
    needs: 
      - build-vote
      - build-worker
      - build-result
      - build-loadbalancer
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Render Compose File
        run: |
          # Cut all but the first image tag.
          VOTE_IMAGE=$(echo ${{ needs.build-vote.outputs.tags }})
          export VOTE_IMAGE
          WORKER_IMAGE=$(echo ${{ needs.build-worker.outputs.tags }})
          export WORKER_IMAGE
          RESULT_IMAGE=$(echo ${{ needs.build-result.outputs.tags }})
          export RESULT_IMAGE
          LOADBALANCER_IMAGE=$(echo ${{ needs.build-loadbalancer.outputs.tags }})
          export LOADBALANCER_IMAGE
          # Render simple template from environment variables.
          envsubst < docker-compose.template.yml > docker-compose.rendered.yml
          cat docker-compose.rendered.yml
      - name: Find comment for deployment URL
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview
      - name: Output deployment ID
        id: comment
        run: 'echo ''${{ steps.find-comment.outputs.comment-body }}'' | sed -n "s/Uffizzi Preview ID: \`\(\S*\)\`/::set-output name=id::\1/p"'
      - name: DEBUG - Echo deployment ID
        run: 'echo ${{ steps.comment.outputs.id }}'
      - name: Update Preview from Uffizzi
        uses: UffizziCloud/update-preview-action@v1
        id: preview
        if: ${{ steps.comment.outputs.id != null }}
        with:
          preview-id: ${{ steps.comment.outputs.id }}
          compose-file: 'docker-compose.rendered.yml'
          username: admin@uffizzicloud.com
          server: https://devops-pro-europe-2022.uffizzicloud.com/
          project: default
          password: ${{ secrets.UFFIZZI_PASSWORD }}
      - name: Check outputs
        run: echo "${{ steps.preview.outputs.id }} at ${{ steps.preview.outputs.url }}"
      - name: Confirm Successful Preview Deployment
        uses: docker://curlimages/curl:7.82.0
        with:
          args: --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.preview.outputs.url }}
